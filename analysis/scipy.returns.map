49#array_like#ArrayLike
23#(N, N) ndarray#np.ndarray
20#double#float
17#1D ndarray#np.ndarray
14#ndarray of real#np.ndarray
12#(M, M) ndarray#np.ndarray
11#array_like (n, d)#ArrayLike
11#complex ndarray#np.ndarray
11#:class:`numpy.ndarray`#np.ndarray
9#(N,) ndarray#np.ndarray
9#sparse matrix#ArrayLike
9#(n, n) ndarray#np.ndarray
7#integer#int
7#ndarray, shape (n,)#np.ndarray
6#MaskedArray#MaskedArray
6#(M,) ndarray#np.ndarray
6#(m+1, n+1) array#np.ndarray
5#(M, N) ndarray#np.ndarray
5#`RootResults` (present if ``full_output = True``)#RootResults
4#tuple of ndarrays#tuple[np.ndarray, ...]
4#{`numpy.random.Generator`, `numpy.random.RandomState`}#np.random.Generator|np.random.RandomState
4#1-D ndarray#np.ndarray
4#ndarray, 2-D#np.ndarray
4#np.matrix#np.matrix
4#{matrix, ndarray}#np.matrix|np.ndarray
4#array_like (..., n)#ArrayLike
4#ndarray, shape (n, m)#np.ndarray
4#(M,) or (M, K) ndarray#np.ndarray
4#float or complex ndarray#float|np.ndarray
4#int32 ndarray#np.ndarray
3#instance of `TransferFunction`#TransferFunction
3#instance of `ZerosPolesGain`#ZerosPolesGain
3#instance of `StateSpace`#StateSpace
3#matplotlib.figure.Figure instance#Figure
3#list of lists#list[list]
3#BSpline object#BSpline
3#ndarray, shape (n, m - 1)#np.ndarray
3#ndarray, shape (m,)#np.ndarray
3#ndarray of int, shape (n,)#np.ndarray
3#array_like, shape (n,)#ArrayLike
3#ndarray with shape of x#np.ndarray
3#(M, K) ndarray#np.ndarray
2#list of ndarrays#list[np.ndarray]
2#``ConfidenceInterval`` object#ConfidenceInterval
2#list(int)#list[int]
2#``TheilslopesResult`` instance#TheilslopesResult
2#``SiegelslopesResult`` instance#SiegelslopesResult
2#array_like or scalar#ArrayLike|Scalar
2#instance of `dlti` and `StateSpace`#dlti|StateSpace
2#dtype#np.dtype
2#(M,) or (M, N) ndarray#np.ndarray
2#numpy.matrix or int#np.matrix|int
2#ndarray of reals#np.ndarray
2#ndarray or list of ndarrays#np.ndarray|list[np.ndarray]
2#{ndarray, list of ndarrays}#list[np.ndarray]|np.ndarray
2#tuple of (t2, c2, k2)#tuple[tuple[t2,c2,k2], ...]
2#scalar or array_like#Scalar|ArrayLike
2#function#Callable
2#HBInfo instance#HBInfo
2#list of ndarray or None#list[np.ndarray]|None
2#ndarray, shape (n + k, n)#np.ndarray
2#ndarray, shape (m - 1,)#np.ndarray
2#ndarray of int with shape of x#np.ndarray
2#ndarray of bool with shape of x#np.ndarray
2#ndarray, shape (n, n)#np.ndarray
2#int, if full_output is true#int|None
2#number#float
2#(N, M) ndarray#np.ndarray
2#(len(c), len(r)) ndarray#np.ndarray
2#(N-1, N-1) ndarray#np.ndarray
2#(M,) or (2, M) double or complex ndarray#np.ndarray
2#(M, M) double or complex ndarray#np.ndarray
2#(..., M, M) ndarray#np.ndarray
2#list of tuples of ints#list[tuple[int,...]
2#Output instance#Output
1#{float, array_like}#ArrayLike|float
1#scalar ndarray#np.ndarray
1#matplotlib.axes.Axes#Axes
1#`~scipy.stats._result_classes.FitResult`#FitResult
1#MannwhitneyuResult#MannwhitneyuResult
1#ndarray of float64#np.ndarray
1#ndarray, same shape as `observed`#np.ndarray
1#(2,) ndarray#np.ndarray
1#median_cihs#median_cihs
1#{list of floats, masked array}#list[float]|ArrayLike
1#SomersDResult#SomersDResult
1#BarnardExactResult#BarnardExactResult
1#BoschlooExactResult#BoschlooExactResult
1#`~scipy.stats._result_classes.TukeyHSDResult` instance#TukeyHSDResult
1#(self.d, `size`) ndarray#np.ndarray
1#tuple of numpy.ndarrays.#tuple[np.ndarray, ...]
1#numpy.ndarray or scipy.sparse.coo_matrix#np.ndarray|coo_matrix
1#list (n,)#list
1#array_like (n, pvals)#ArrayLike
1#tuple of (K-S statistic, probability)#tuple
1#(int, int)#tuple[int,int]
1#PageTrendTestResult#PageTrendTestResult
1#BootstrapResult#BootstrapResult
1#`~scipy.stats._result_classes.BinomTestResult` instance#BinomTestResult
1#``LinregressResult`` instance#LinregressResult
1#ConfidenceInterval instance#ConfidenceInterval
1#instance of `~scipy.stats._result_classes.RelativeRiskResult`#RelativeRiskResult
1#ndarray, see `dtype` parameter above.#np.ndarray
1#tuple of ndarrays or floats#tuple[np.ndarray, ...]|float
1#namedtuple#namedtuple
1#`~scipy.stats._result_classes.PearsonRResult`#PearsonRResult
1#float or ndarray (2-D square)#float|np.ndarray
1#array of dtype float#np.ndarray
1#1-D ndarray of ints#np.ndarray
1#(nx, ny) ndarray#np.ndarray
1#(nx + 1) ndarray#np.ndarray
1#(ny + 1) ndarray#np.ndarray
1#(N,) array of ints or (2,N) ndarray of ints#np.ndarray
1#ndarray, shape(nx1, nx2, nx3,...)#np.ndarray
1#(N,) array of ints or (D,N) ndarray of ints#np.ndarray
1#ndarray, shape (Kmax, M) or (M,)#np.ndarray
1#ndarray, shape (Kmax,) or float#np.ndarray|float
1#(numtaps,) ndarray#np.ndarray
1#2-D ndarray#np.ndarray
1#tuple containing the discrete system#tuple
1#1-D array#ArrayLike
1#float or 1D array#float|np.ndarray
1#ndarray, same shape as `x`#np.ndarray
1#instance of `dlti`#dlti
1#instance of `dlti` and `ZerosPolesGain`#dlti|ZerosPolesGain
1#Bunch object#Bunch
1#(t.size, D)#tuple
1#double or ndarray#float|np.ndarray
1#integer or array of integers#int|np.ndarray
1#list or array of lists#list|np.ndarray
1#scalar or 1-D array#Scalar|np.ndarray
1#double array of shape (npoints,)#np.ndarray
1#tuple of arrays#tuple[np.ndarray, ...]
1#kronecker product in a sparse matrix format#spmatrix
1#kronecker sum in a sparse matrix format#spmatrix
1#ndarray, or sparse matrix, or `LinearOperator`#np.ndarray|spmatrix|LinearOperator
1#ndarray or sparse matrix#np.ndarray|ArrayLike
1#(A, M, x, b, postprocess)#tuple
1#(M, M) sparse matrix#ArrayLike
1#(M,M) ndarray#np.ndarray
1#LinearOperator.dtype#np.dtype
1#ndarray, shape=(M, k)#np.ndarray
1#ndarray, shape=(k,)#np.ndarray
1#ndarray, shape=(k, N)#np.ndarray
1#LinearOperator#LinearOperator
1#This matrix in the passed format.#np.matrix
1#numpy.matrix, 2-D#np.matrix
1#BSpline instance or a tuple#BSpline|tuple
1#`BSpline` instance or tuple#BSpline|tuple
1#BSpline instance or a tuple of (t2, c2, k2)#BSpline|tuple
1#ndarray, shape(k+1,)#np.ndarray
1#spline#spline
1#`numpy.poly1d` instance#np.poly1d
1#2-D array with shape (len(y), len(x))#np.ndarray
1#Polynomial class#Polynomial
1#`csr_array` object#csr_array
1#a BSpline object of the degree ``k`` and with knots ``t``.#BSpline
1#a BSpline object of the degree `k` with knots `t`.#BSpline
1#poly1d instance#poly1d
1#(Q, ...) ndarray#np.ndarray
1#ndarray, shape xi.shape[:-1] + values.shape[ndim:]#np.ndarray
1#real ndarray#np.ndarray
1#complex-valued N-D NumPy array#np.ndarray
1#ndarray (complex)#np.ndarray
1#FullArgSpec(args, varargs, varkw#FullArgSpec
1#hashable object#hashable
1#MatFileReader object#MatFileReader
1#mapping#Mapping
1#{0, 1, 2}#Literal[0,1,2]
1#``scipy.sparse.coo_matrix``#coo_matrix
1#char#str
1#`MetaData`#MetaData
1#numpy array#np.ndarray
1#Python string#str
1#`DenseOutput`#DenseOutput
1#ndarray, shape (n,) or (n, n_points)#np.ndarray
1#ndarray, shape (3, n)#np.ndarray
1#ndarray, shape (n_states,) or (n_states, n_points)#np.ndarray
1#ndarray or csc_matrix, shape (n, n)#np.ndarray|csc_matrix
1#ndarray, shape (n_points,)#np.ndarray
1#ndarray, shape (n, n_points)#np.ndarray
1#`OdeSolution` or None#OdeSolution|None
1#ndarray, shape (n, n, m)#np.ndarray
1#ndarray with shape (n, k, m) or None#np.ndarray|None
1#ndarray with shape (n + k, k) or None#np.ndarray|None
1#csc_matrix, shape (n * m + k, n * m + k)#csc_matrix
1#ndarray, shape (k,)#np.ndarray
1#ndarray or None, shape (k,)#np.ndarray|None
1#array, shape (len(t), len(y0))#np.ndarray
1#dict, only returned if full_output == True#dict|None
1#{ndarray, sparse matrix, LinearOperator}#spmatrix|np.ndarray|LinearOperator
1#2-D array#ArrayLike
1#dict (returned only if `full_output` is True)#dict|None
1#str (returned only if `full_output` is True)#str|None
1#int (returnned only if `full_output` is True)#int|None
1#LinearOperator, shape (n, n)#LinearOperator
1#LinearOperator, shape (m, n)#LinearOperator
1#LinearOperator, shape (n, m)#LinearOperator
1#OptimizeResult with the following fields defined#OptimizeResult
1#ndarray, shape (2,)#np.ndarray
1#ndarray with shape (k,) or float#np.ndarray|float
1#ndarray of float, if full_output is true#np.ndarray|None
1#string, if full_output is true#str|None
1#`RootResults`#RootResults
1#ndarray, shape=(n, n)#np.ndarray
1#text#str
1#(M*P, N*Q) ndarray#np.ndarray
1#(k, n) ndarray#np.ndarray
1#(N, NRHS) ndarray#np.ndarray
1#(N,) or (N, K) ndarray#np.ndarray
1#(K,) ndarray or float#np.ndarray|float
1#(min(M, N),) ndarray or None#np.ndarray|None
1#(n,) ndarray#np.ndarray
1#2-D ndarray with shape (N*N, N*N)#np.ndarray
1#(m, n) ndarray#np.ndarray
1#(K, N) ndarray#np.ndarray
1#(N, N) array_like#ArrayLike
1#(n*m, k) ndarray#np.ndarray
1#(M, M) float or complex ndarray#float|np.ndarray
1#(min(M, N),) ndarray#np.ndarray
1#(N, K) ndarray#np.ndarray
1#ndarray, shape (min(N, K),)#np.ndarray
1#int ndarray#np.ndarray
1#(K, N), ndarray#tuple|np.ndarray
1#(u + 1, M) ndarray#np.ndarray
1#(n_rows, n_columns) csc_matrix#csc_matrix
1#float64 ndarray#np.ndarray
1#Model instance#Model
